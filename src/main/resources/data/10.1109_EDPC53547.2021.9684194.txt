Data-driven technologies such as machine learning promise great potentials for electric drives production. However, present information systems do not allow flexible and reliable accumulation of high-dimensional data such as images and time series, so feature-rich data are often discarded in practice. The advent of edge computing and microservice-based software architectures in recent years enables low latencies, high data integrity, and flexibility towards different communication protocols, thus offering new possibilities to accumulate data in a manufacturing environment. Hence, this paper proposes a microservice architecture deployed on the edge that serves as a communication layer between data sources and downstream data analytics capabilities. The architecture’s flexibility is demonstrated and validated on different process steps along the process chain of hairpin stator production. In conclusion, the developed microservice architecture is suitable for reliable data acquisition at the edge and can enable subsequent machine learning analyses across the process chain.

Keywords: microservice, architecture, edge computing, data acquisition, data analytics, machine learning, hairpin technology, electric drives production

I. INTRODUCTION

In current electric traction drives, hairpin technology enables major improvements in terms of power density as well as manufacturing reliability when compared to conventional wound motor designs. For efficient processing, laser welding is commonly used to create contact points between the endings of each U-shaped coil section. The quality of these contact points directly influences the resulting electromagnetic characteristics of the stator. Thus, the welding process is of crucial importance for high-quality hairpin stator manufacturing to avoid potentially high scrap costs. Although numerous interdependencies between upstream processes and the contacting quality are known and subject to recent scientific research, it is currently not feasible to automatically adjust the contacting process in response to deviations of upstream processes due to the often non-linear, partly unknown cause-effect relationships.

Nevertheless, recent studies exemplify the potentials of machine learning (ML) in electric drives production, demonstrating that ML algorithms are capable of extracting and evaluating characteristic features from high-dimensional data acquired directly from the process itself. In hairpin stator production especially, research suggests that quality prediction using ML algorithms for laser welding of hairpins is feasible.

However, in practice, annotated high-dimensional data of adequate quality needed for training such ML models are often lacking. Therefore, the ability to capture and quickly annotate data from a manifold of data sources such as sensors and PLCs promises great potential to quantitatively express interdependencies across the process chain using ML.

Consequently, this paper introduces a microservice-based architecture that provides a flexible abstraction layer for data acquisition from several sources as well as the linking of machine, process, and quality data to create richly annotated datasets for ML purposes. Apart from the flexible and simple integration of inhomogeneous operation technology (OT) in peripheral information technology (IT), the required architecture must allow decentralized data acquisition while centrally long-term data storage ensures ease of use for subsequent data analyses. In addition to process data such as images or force-displacement curves, it is of equal importance to capture quality data, e.g. from end-of-line tests, as well as machine data like the set machine parametrization. All data must be uniquely identifiable and assignable using a workpiece ID.

Accordingly, the paper is structured as follows: Section 2 discusses microservices, data requirements from an ML point of view as well as related work and thereupon derives requirements for the proposed architecture. In Section 3, the overall concept as well as details on the individual components are provided. Subsequently, the developed architecture is implemented and validated on selected process steps of the hairpin stator process chain. The paper concludes by outlining possible future research.

II. STATE OF THE ART AND OBJECTIVES

This section explores the fundamentals of microservices as well as the demand for high-quality data in the context of ML. Subsequently, related work is presented and discussed from which objectives are derived.

A. Brief Introduction to Microservices

The increasing demand for flexibility and interoperability in the context of IIoT applications demands a migration from the traditional ISA-95 layered architecture to one that reflects these requirements. Consequently, service-oriented architectures are increasingly deployed as they promote decentralization, flexibility, and adaptability, thus enabling information fusion and aggregation from heterogeneous sources in a manufacturing scenario.

In general, services represent “self-contained processes that can be described, published, located, and invoked over a network.” Such networked services can range from simple responses to the execution of complex business processes. Accordingly, a microservice-based application consists of small services that are managed, deployed, and scaled independently. Together, numerous of these loosely coupled microservices form a complex interoperating network to solve a required business task. Typically, a microservice consists of three layers like a typical 3-tiered application, i.e. an interface layer, a business logic layer, and a data persistence layer, but in a much smaller, more limited context. Microservice architectures in particular promise potential in manufacturing, as simple and small-scale services are especially well suited for data acquisition from various sources with acceptable engineering effort.

Microservices use different kinds of communication protocols such as hypertext transfer protocol (HTTP) and comply with open standards such as representational state transfer (REST). A review concerning industrial service-oriented architecture applications and the development of microservices for microservice-oriented architectures is presented, highlighting benefits like obtaining information from heterogeneous systems, interoperability, and cross-layer integration between equipment and industrial systems.

B. Relevant Basics of Machine Learning

ML is defined as a collection of computational methods that use experience to reliably make predictions or otherwise improve their performance. Depending on the available data, ML algorithms are further subdivided into learning paradigms. As the most prominent paradigm, supervised learning algorithms rely on previously annotated output values corresponding to the input data from which patterns are deducted during training. Hereby, in contrast to classical statistical approaches, ML algorithms thrive on complex, high-dimensional data.

Consequently, the goal of the training is the recognition of patterns in high-dimensional data that allow the establishment of an exact relationship between input data and output value (label). The deducted relationships can then be used for predictions on unseen data. Depending on the output value, a further subdivision can be applied: While the output value in classification is a discrete variable, regression algorithms predict a continuous value.

C. Related Work

The general benefits of microservice-based system architectures for the interconnection of IT and OT are demonstrated. The rapid reconfiguration of these architectures and their ability to integrate stakeholders from the enterprise to the control level in a distributed manner is highlighted.

A holistic ML framework in the context of IIoT is provided, emphasizing the necessity for microservice architectures. Frameworks for the integration of ML capabilities for data analytics on heterogeneous data sources are proposed. While the publications state the necessity for data acquisition from heterogeneous data sources, no detailed insight into the data acquisition process is given.

A system architecture that permits data acquisition in the context of electronics production with a strong emphasis on retrofitting in the brownfield is presented. The developed architecture is validated across a process chain of surface-mount technology (SMT) manufacturing. However, as data acquisition is exclusively performed by means of file system monitoring, no communication interfaces are implemented; further, no microservice architecture is deployed.

The developed architecture features so-called digital-physical integration microservices. According to the authors, these microservices implement an abstraction layer for further microservices to connect to as well as provide driver functionalities for different communication protocols to OT. Furthermore, the abstraction layer handles access control, authentication, and authorization.

Requirements for cloud and edge computing solutions in the context of quality monitoring of hairpin welding in particular are derived. The conceived architecture focuses on the acquisition of 3D scans of the weld as well as its analysis using convolutional neural networks. The necessity for edge computing solutions, observing significant performance gains in the processing of data, is demonstrated.

D. Shortcomings and Derived Objectives

The previous section discussed several scientific publications addressing the connection of inhomogeneous data sources in IIoT and ML scenarios. Consensually, the considered research acknowledges the demand for flexible connection and intercommunication of heterogeneous data sources and proposes several possible approaches.

As the presented research approaches primarily focus on in-line data acquisition across production lines, limitations arise for the training of an ML-based quality predictor, which requires additional quality data that can often only be acquired off-line. In serial production of hairpin stators, the in-line acquisition of proper quality data for the individual weld, e.g., its cross-section or electrical contact resistance, is only feasible at great expense or not at all, depending on the required quality characteristic. Therefore, such quality characteristics are only tested on a random basis so far. As the laser-welded contact points have major implications on the overall quality of the winding, an ML-based quality prediction for each weld based on easily obtainable process data is desirable. Therefore, this paper proposes a microservice-based architecture that allows continuous in-line data acquisition as well as the training-related acquisition of quality data from additional, temporarily included off-line measurement steps.

The conceived approach to data acquisition shall enable the training and operation of an ML-based quality prediction in laser welding of hairpins. For training such an ML model, in addition to the in-line acquired process data, the associated quality data are temporarily recorded by suitable off-line measuring systems like computed tomography or electrical resistance measuring. Depending on the prediction task, destructive measurement techniques such as microsections may be necessary as well. Later in operation, the trained quality characteristic can then be predicted for the individual weld solely based on available process data by model inference, i.e., measurement is no longer necessary. If changes in the environment occur or the model’s performance is deemed unsatisfactory, retraining is prompted.

In summary, four major objectives can be derived that the conceived architecture must comply with:

High flexibility towards communication protocols of data sources
Acquisition of high-dimensional, multimodal data from heterogeneous data sources
Ability to aggregate in-line process data and machine data as well as corresponding quality-relevant data from off-line data sources, e.g., a laboratory environment
Integration of traceability for workpiece identification
III. PROPOSED MICROSERVICE-BASED ARCHITECTURE FOR FLEXIBLE DATA ACQUISITION AT THE EDGE

Within this section, a microservice architecture is developed that describes how data are acquired from various data sources, e.g., an in-line production machine or an off-line measuring station, and how these data are assigned to the corresponding workpieces. Subsequently, the annotated data are stored in a cloud-based database for the ensuing training of ML algorithms.

A. Requirements for Data Acquisition with Regard to Machine Learning

In a production environment, ML models perform predictions on unseen data given a stable environment. Thus, alterations in the environment the algorithm operates in can affect its behavior in unintended ways. Therefore, expedient data acquisition demands for three data types to be uniquely identifiable and allocated to a workpiece.

First, high-dimensional process data of varying modalities such as force-displacement curves, images, or point clouds have to be processed. Second, as supervised ML algorithms rely on annotated data, interfaces for manual or automated annotation using quality-related data acquired from off-line measuring systems or downstream end-of-line tests have to be implemented. Third, as manufacturing systems cannot be considered stable environments due to possible changes in machine parametrization, capturing the machining parameters shall enable the monitoring of the model’s environment.

B. Structure and Components of the Proposed Architecture

The proposed architecture consists of five main components: an asset, a data acquisition service (DAQS), an aggregation service (AS), a graphical user interface (GUI), and a database in the cloud. An overview of the conceived architecture is visualized.

Fundamentally, an asset describes a data source, such as machine-internal sensors, externally added sensors, PLCs, or measuring devices. As the connector between OT and IT, a DAQS is responsible for data retrieval from the asset and transmission of the data to the AS. The AS aggregates process, machine, and quality data from all data sources of a production machine or measuring station that are provided by one or more DAQS and links these data with the associated workpiece information, e.g., provided by the GUI. Finally, these annotated data are passed to the database's REST application programming interface (API), which then stores the data in the central database for later use in ML applications. A detailed explanation of the individual components is presented in the following.

Data Acquisition Service (DAQS)
During a process step, the DAQS collects all process, machine, or quality data that are generated by the connected sensors and measuring devices. The DAQS is designed individually for each of these data sources, communicating via their native interfaces and protocols. In this work, discrete process steps are predominantly considered, however, if data are streamed from a data source as a continuous data stream, the DAQS collects and buffers all data until the end of a process. The collected data are then forwarded to the REST API of the AS. In compliance with the REST standard, HTTP serves as the downstream communication protocol. Essentially, DAQS are lightweight microservices that can be easily adapted to the required communication protocol of a specific data source.

Graphical User Interface (GUI)
At each production machine or measuring station, a GUI is provided for process monitoring and, if no MES is incorporated, assigning the data to its respective workpiece. Regarding the latter, the GUI allows the generation of annotated datasets, enabling the later training of ML models for in-line predictions. Each GUI is configured to match the respective AS. In a laboratory environment, for example, the GUI is used to monitor the progression of data flow and allows the operator to track which data have already arrived at the AS. Therefore, the current status of the AS is visualized in a data table in the GUI. Via REST API endpoints, the GUI acquires information about the data currently stored in the AS to update the GUI regularly. In addition, the GUI can be used to identify the workpieces currently being processed. This is particularly relevant for a laboratory environment, where integrated traceability via MES is lacking. Therefore, a unique ID is assigned to each workpiece to accumulate all data along the manufacturing process. At each process step, the workpiece IDs can either be entered manually by the operator or read out automatically with a scanner. For the latter, the IDs are physically attached to the individual workpieces in a machine-readable form via DMC or QR codes. Finally, the information about the workpieces currently being processed is sent to the AS, which enables the matching of data and workpiece and thus fulfills the prerequisite for the annotation of the collected data.

Aggregation Service (AS)
The AS is the key component for flexible data acquisition at the edge since it bundles accruing process, machine, and quality data and assigns the data to its specific workpiece. Therefore, the AS itself consists of five core elements: a configuration file, a REST API, a preprocessor to preprocess incoming data, a cache to store data temporarily, and the aggregator to bundle and annotate the data correctly. Thus, the AS offers a unified yet flexible architecture that can be applied regardless of the connected asset.

The configuration file is used to create a specific AS tuned to a certain asset. This configuration file needs to be created once when connecting a new asset and defines the concrete structure of a particular AS. In this way, the general structure of the AS can be reused for many different assets.

The interface to the AS is implemented as a REST API through which data can be exchanged only in a certain, predefined JSON schema. This interface enforces a standardized schema in which data are processed and communicated to higher network participants, ensuring that subsequent data analysis applications receive data in a uniform format. Hence, this REST API interface acts as an abstraction layer that enables automated further processing of the data in downstream components thanks to data consistency. After passing the REST API interface successfully, incoming data can optionally be preprocessed by the preprocessor in the AS, e.g., to preprocess images or normalize data. Incoming data as well as workpiece information are then temporarily stored in the cache of the AS.

The aggregator regularly checks whether data like machine data, process data from a specific sensor, or quality data from a measuring device have already arrived at the AS and whether the corresponding workpiece has been assigned to it. If so, the data are linked to the workpiece and subsequently, the annotated data are transmitted to the REST API of the database.

Database in the Cloud
Lastly, the annotated data bundle is sent to the REST API of the database. Further, HTTPS is used as a communication protocol for secure data transmission while access to the database is restricted by HTTP basic authentication. The database allows the permanent storage of data in the cloud where the data are stored for further ML applications.
IV. IMPLEMENTATION AND VALIDATION ON SELECTED PROCESSES OF HAIRPIN STATOR PRODUCTION

The proposed microservice architecture is validated through several process steps of hairpin stator production in a laboratory environment. The AS and several DAQS are implemented and configured for the process steps of stripping, cutting, and welding. During the performed processes, enameled copper wire is first stripped off its insulation in places and cut to length. Subsequently, two pins each are joined together using laser welding. Between these production processes, measurements such as fluorescence, mass, and electric resistance measuring are performed and provide quality-relevant data for ML purposes. In series production at motor manufacturers, these measurements are not integrated.

Both in-line production and off-line measuring steps used for validation are connected by applying the proposed microservice architecture. The overall architecture results from combining several assets, which are all subject to the same uniform presented schema. In the following, detailed insights into the implemented DAQS are presented first. Subsequently, the AS’ ability to aggregate and annotate data as well as its communication with the central database are discussed.

A. Implementation of the Data Acquisition Services

The TRUMPF TruDisk laser welding system is utilized for the process steps of stripping and welding. During the stripping and welding process, data from different sensors such as a multispectral sensor, photodiodes, or cameras as well as process data from the laser system itself are recorded by the DAQS. Due to the encountered complexity, the DAQS itself is a combination of several microservices. First, the reader services collect the streamed data from the microcontrollers of the multispectral and photodiode sensors, images acquired from various cameras as well as data from the laser system and store these data as files in a local file system. Depending on the performed process, a bundler service is responsible for dividing the data into bundles according to the processed workpiece, converting them into the correct format for the AS, and finally forwarding them to the AS.

Between stripping and welding, the copper pins are cut to length with a servo press to create a defined cutting edge. Integrated force and position transducer capture a force-displacement curve. The press software stores the acquired data in a local Microsoft (MS) Access database, which is regularly monitored for changes by the DAQS. Upon change detection, the service queries the latest data record using SQL and forwards the record to the AS.

To measure the fluorescence of a stripped pin end, a measuring device from SITA is used to quantify the relative fluorescence unit (RFU). The SITA ProcessLog program controls the measuring device itself. The software stores measured RFU values as CSV files in the local file system. Here, a file monitoring service acts as the DAQS, regularly checking the specified directory. If a change is detected, the latest measurement entry is forwarded to the AS.

In order to be able to determine a possible mass difference resulting from splatters during welding, the pins are weighed. Therefore, a digital scale is connected to a measuring laptop via USB. The DAQS continuously checks whether data are available in the buffer of the serial receiver port. Upon data transmission, the service translates the data package into human-readable language using UTF-8 encoding, generates a JSON file, and transfers the data to the AS.

Additionally, the contact resistance of the weld is measured. For this purpose, the pin pair is clamped in the corresponding measuring device and the measurement is triggered via a LabVIEW program. As LabVIEW provides REST communication functionality, the software transmits the acquired data directly to the AS, thus serving as a DAQS. Then, for simplified preprocessing, the preprocessor of the AS transforms the incoming data into the expected schema.

B. Implementation of the Aggregation Service

The AS’ endpoints are easily configurable using a standardized configuration file, thus ensuring adaptability to the respective process steps. Upon receiving data from the respective DAQS via REST, the AS serves as an abstraction layer, enforcing a uniform data structure so that downstream data processing can be applied in a standardized manner. Further, the service ensures that the acquired data are linked to the workpiece IDs entered manually or via the webcam interface of the GUI. Further, the GUI shows the current state of the cache in which each entered workpiece ID is matched to the acquired data subdivided by topics referring to the individual sensors. Additionally, the position of every pin in the machine fixture is visualized to aid the operator.

For central storage, a standardized REST API towards the database is addressed. Here, authentication is required to discourage unauthorized access to the database. Further, SSL encryption for the API is employed to increase data security.

Finally, using the collected quality-relevant data such as electrical resistance or mass difference, conclusions about the quality for each welded pin pair can be deducted. Combined with process data from laser stripping, cutting, and laser welding, a suitable dataset for supervised ML is acquired. Accordingly, ML algorithms could be trained that are able to predict the quality of the weld solely based on the collected process data. Furthermore, the acquired machine data allows the production environment’s monitoring, thus enabling potential retraining of the model.

C. Validation of the Architecture

For validation purposes, two pin pairs were processed and measured as previously described. For the purpose of demonstration, two of the four pins are processed using suboptimal laser parameters while stripping. The resulting multimodal process data are visualized. Data captured while stripping by several photodiodes as well as a multi-spectral sensor are shown. The force-displacement curve from the cutting step is depicted. Images captured before as well as after welding are displayed. Hereby, the already integrated Trumpf VisionLine camera as well as additionally integrated cameras are leveraged.

Furthermore, the acquired quality data from the measurement steps for the individual pins are shown, the data acquired for the welded pin pairs. To obtain reliable results, the RFU and resistance measuring are performed several times and the mean value and standard deviation are given. Evidently, suboptimal stripping may result in higher RFU values of the individual pins as well as higher mass differences due to increased splatter formation. This observation confirms the assumed cross-process dependencies in hairpin stator production.

The developed architecture’s validation across selected processes of the hairpin stator production demonstrates its flexibility. Due to the strong emphasis on microservices, different communication protocols between OT and IT can easily be integrated into the architecture. Further, in contrast to monolithic architectures, the ability to integrate microservices written in different programming languages underlines the inherent flexibility of a microservice-based architecture. In addition, the architecture provides an infrastructure that scales well, even to complex machinery such as the described laser system featuring a plethora of additionally equipped sensors. Moreover, the aggregation of data in the AS allows for simple matching of machine and process data. Additionally, with adequate traceability through unique IDs, data annotation can be automated using off-line measuring devices whose outputs serve as quality features and thus as labels for supervised ML. The ease of use is further improved by the high abstraction of the service, making it conveniently configurable using a defined JSON schema. Downstream data storage is standardized as the AS enforces uniform communication regardless of the process or the data’s modality. Further, data integrity and security are ensured using authentication and SSL encryption when submitting data to the cloud. Concerning the initially defined objectives, the AS’ capabilities in terms of flexibility towards heterogeneous data sources as well as its ability to capture, aggregate, and annotate high-dimensional data were demonstrated.

However, despite its demonstrated applicability, several limitations were identified. Due to the predominantly discrete process steps in hairpin stator production, continuous processes and therefore streaming of process data is not yet considered. Furthermore, a tight integration into existing MES could simplify data annotation as well as traceability.

In summary, the presented approach serves as an enabler for subsequent supervised ML analyses. The ability to capture machine and process data of relevant process steps and its automatic annotation with the associated quality data simplifies dataset generation.

VI. CONCLUSION AND OUTLOOK

This paper presented a microservice-based architecture for flexible and simple data acquisition from numerous data sources. The microservices are flexibly configurable for the respective data source and communication interface. Standardized communication to downstream services is enforced using a defined communication schema for REST calls to and from the AS. The ability to capture data from heterogeneous sources is demonstrated using an exemplary sub-process chain of hairpin stator production in a laboratory environment. In doing so, this paper exemplifies the architecture‘s ability to reliably capture feature-rich data for supervised ML algorithms.

Forthcoming research should be dedicated to ML-based analyses to quantify interdependencies between process steps. For example, ML-based quality predictions could replace or at least reduce the scope of classical sampling inspection or end-of-line tests. Accordingly, the proposed architecture requires further extensions such as services for communications with PLCs, ML inference, and decision-making; thus, underlining the relevance of the proposed microservice architecture. In the future, extensions to the existing architecture using an event-based approach can further increase the interoperability while simultaneously decreasing engineering efforts. Hereby, continuous data processing could also be implemented, potentially allowing real-time analyses.